@*User.Identity.IsAuthenticated*@
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Courses<span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li>@Html.ActionLink("Course Catalog", "Index", "Course")</li>
                    <li><a href="#">My Courses</a></li>
                    <li><a href="#">Top Courses</a></li>
                    <li role="separator" class="divider"></li>
                    @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
                    {
                        <li>@Html.ActionLink("Create Course", "Create", "Course")</li>
                        <li>@Html.ActionLink("ManageCourses", "ManageList", "Course")</li>
                        <li>@Html.ActionLink("My Storage", "Index", "Storage")</li>
                    }

                </ul>
            </li>
            
            <li>

                @Html.ActionLink(User.Identity.Name, "Index", "Profile", routeValues: null, htmlAttributes: new {title = "Manage"})
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new {id = "loginLink"})</li>       
    </ul>
}

